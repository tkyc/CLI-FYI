################################
python
################################

- set up venv
pip install pipenv
mkdir your-dir
cd your-dir
pipenv --python python3 || pipenv install (uses default python version)

pipenv shell (turn on virtual environment)
pipenv install || pipenv install -r requirements.txt (install project dependencies) 
pipenv update (update packages)
pipenv install your-package
pip freeze (see installed dependencies)

################################
Linux
################################

- temporarily resize tmp to 8 gigs
sudo mount -o remount,size=8G,noatime /tmp;

################################
React
################################
- use live-server to run proj & listent to changes
live-server folder-containing-proj-files

- initialize project
yarn init

- add babel dependencies
yarn add babel-preset-react babel-preset-env

- start babel and listens for changes (read jsx in src/app.js and write to output file in public/scripts/app.js) 
babel src/app.js --out-file=public/scripts/app.js --presets=env,react --watch


################################
React-Native
################################
- Using expo-cli to init project
expo init project-name

- Using expo to launch project
expo start

- Convert expo project to classic React-Native project with Android/iOS native files
expo eject

- View Android logs
react-native log-android

- Run project on android (Must launch project first with npm start)
react-native run-android
